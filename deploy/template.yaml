apiVersion: v1
kind: Template
labels:
  app: mocks
  template: mocks
metadata:
  name: mocks

objects:
- apiVersion: v1
  kind: ServiceAccount
  metadata:
    name: mocks-sa

- apiVersion: rbac.authorization.k8s.io/v1
  kind: Role
  metadata:
    name: mocks-role
  rules:
  - apiGroups:
    - ""
    resources:
    - secrets
    - pods
    verbs:
    - get
    - list
    - patch
    - update
    - watch
  - apiGroups:
    - ""
    resources:
    - pods/exec
    verbs:
    - create
    - delete
    - get
    - list
    - patch
    - update
    - watch
  - apiGroups:
    - apps
    resources:
    - deployments
    - deployments/scale
    verbs:
    - get
    - list
    - patch
    - update
    - watch
  - apiGroups:
    - route.openshift.io
    resources:
    - routes
    verbs:
    - get
    - list

- apiVersion: rbac.authorization.k8s.io/v1
  kind: RoleBinding
  metadata:
    name: mocks-binding
  roleRef:
    apiGroup: rbac.authorization.k8s.io
    kind: Role
    name: mocks-role
  subjects:
  - kind: ServiceAccount
    name: mocks-sa

- apiVersion: apps/v1
  kind: Deployment
  metadata:
    labels:
      app: mocks
    name: mocks
  spec:
    minReadySeconds: 15
    progressDeadlineSeconds: 600
    replicas: ${{REPLICAS}}
    revisionHistoryLimit: 9
    selector:
      matchLabels:
        name: mocks
    strategy:
      rollingUpdate:
        maxSurge: 25%
        maxUnavailable: 25%
      type: RollingUpdate
    template:
      metadata:
        labels:
          app: mocks
          name: mocks
      spec:
        serviceAccountName: mocks-sa
        containers:
        - image: ${IMAGE}:${IMAGE_TAG}
          imagePullPolicy: Always
          name: mocks
          ports:
          - containerPort: 9000
            protocol: TCP
          resources:
            limits:
              cpu: 500m
              memory: 512Mi
            requests:
              cpu: 250m
              memory: 128Mi
          env:
          - name: INITIALIZE_FE
            value: ${INITIALIZE_FE}
          - name: INITIALIZE_GW
            value: ${INITIALIZE_GW}
          - name: GW_MOCK_ENTITLEMENTS
            value: ${GW_MOCK_ENTITLEMENTS}
          - name: GW_MOCK_BOP
            value: ${GW_MOCK_BOP}
          - name: FE_DEPLOYMENT
            value: ${FE_DEPLOYMENT}
          - name: GW_DEPLOYMENT
            value: ${GW_DEPLOYMENT}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        - image: ${KEYCLOAK_IMAGE}:${KEYCLOAK_IMAGE_TAG}
          imagePullPolicy: Always
          name: keycloak
          env:
          - name: DB_VENDOR
            value: "h2"
          - name: PROXY_ADDRESS_FORWARDING
            value: "true"
          - name: KEYCLOAK_USER
            value: admin
          - name: KEYCLOAK_PASSWORD
            value: admin
          ports:
          - containerPort: 8080
            protocol: TCP
          resources:
            limits:
              cpu: 500m
              memory: 512Mi
            requests:
              cpu: 250m
              memory: 128Mi
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
        dnsPolicy: ClusterFirst
        imagePullSecrets:
        - name: quay-cloudservices-pull
        - name: rh-registry-pull
        restartPolicy: Always
        schedulerName: default-scheduler
        securityContext: {}
        terminationGracePeriodSeconds: 30

- apiVersion: v1
  kind: Service
  metadata:
    name: mocks
  spec:
    ports:
    - name: 8080-tcp
      port: 8080
      protocol: TCP
      targetPort: 9000
    selector:
      app: mocks
    sessionAffinity: None
    type: ClusterIP

- apiVersion: v1
  kind: Service
  metadata:
    name: rbac
  spec:
    ports:
    - name: 8080-tcp
      port: 8080
      protocol: TCP
      targetPort: 9000
    selector:
      app: mocks
    sessionAffinity: None
    type: ClusterIP

- apiVersion: v1
  kind: Service
  metadata:
    name: entitlements-api-go
  spec:
    ports:
    - name: 3000-tcp
      port: 3000
      protocol: TCP
      targetPort: 9000
    selector:
      app: mocks
    sessionAffinity: None
    type: ClusterIP

- apiVersion: v1
  kind: Service
  metadata:
    name: keycloak
  spec:
    ports:
    - name: 8080-tcp
      port: 8080
      protocol: TCP
      targetPort: 8080
    selector:
      app: mocks
    sessionAffinity: None
    type: ClusterIP

- apiVersion: route.openshift.io/v1
  kind: Route
  metadata:
    labels:
      app: keycloak
    name: keycloak
  spec:
    port:
      targetPort: 8080-tcp
    tls:
      termination: edge
      insecureEdgeTerminationPolicy: Redirect
    to:
      kind: Service
      name: keycloak
      weight: 100
    wildcardPolicy: None

- apiVersion: route.openshift.io/v1
  kind: Route
  metadata:
    labels:
      app: mocks
    name: mocks
  spec:
    port:
      targetPort: 8080-tcp
    tls:
      termination: edge
      insecureEdgeTerminationPolicy: Redirect
    to:
      kind: Service
      name: mocks
      weight: 100
    wildcardPolicy: None

parameters:
- name: IMAGE
  value: "quay.io/cloudservices/mocks"
- name: IMAGE_TAG
  value: "latest"
- name: KEYCLOAK_IMAGE
  value: "quay.io/keycloak/keycloak"
- name: KEYCLOAK_IMAGE_TAG
  value: "latest"
- name: REPLICAS
  description: The number of replicas to use in the deployment
  value: "1"
- name: INITIALIZE_FE
  value: "true"
- name: INITIALIZE_GW
  value: "true"
- name: GW_MOCK_ENTITLEMENTS
  value: "true"
- name: GW_MOCK_BOP
  value: "true"
- name: FE_DEPLOYMENT
  value: "front-end-aggregator"
- name: GW_DEPLOYMENT
  value: "apicast"
